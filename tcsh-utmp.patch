Use libc's built-in getutXXX() functions for manipulating the file.

--- tcsh-6.13.00/tc.who.c.orig	2002-11-21 21:02:01.000000000 +0100
+++ tcsh-6.13.00/tc.who.c	2004-09-05 10:36:20.054000632 +0200
@@ -165,12 +165,13 @@
 watch_login(force)
     int force;
 {
-    int     utmpfd, comp = -1, alldone;
+    int     comp = -1, alldone;
     int	    firsttime = stlast == 1;
 #ifdef BSDSIGS
     sigmask_t omask;
 #endif				/* BSDSIGS */
     struct utmp utmp;
+    struct utmp *uptr;
     struct who *wp, *wpnew;
     struct varent *v;
     Char  **vp = NULL;
@@ -182,7 +183,6 @@
 #ifdef WINNT_NATIVE
     static int ncbs_posted = 0;
     USE(utmp);
-    USE(utmpfd);
     USE(sta);
     USE(wpnew);
 #endif /* WINNT_NATIVE */
@@ -263,18 +263,8 @@
 	return;
     }
     stlast = sta.st_mtime;
-    if ((utmpfd = open(_PATH_UTMP, O_RDONLY|O_LARGEFILE)) < 0) {
-	if (!force)
-	    xprintf(CGETS(26, 2,
-			  "%s cannot be opened.  Please \"unset watch\".\n"),
-		    _PATH_UTMP);
-# ifdef BSDSIGS
-	(void) sigsetmask(omask);
-# else
-	(void) sigrelse(SIGINT);
-# endif
-	return;
-    }
+    utmpname(_PATH_UTMP);
+    setutent();
 
     /*
      * xterm clears the entire utmp entry - mark everyone on the status list
@@ -289,7 +279,9 @@
      * Read in the utmp file, sort the entries, and update existing entries or
      * add new entries to the status list.
      */
-    while (read(utmpfd, (char *) &utmp, sizeof utmp) == sizeof utmp) {
+
+    while ((uptr = getutent())) {
+	memcpy(&utmp, uptr, sizeof(utmp));
 
 # ifdef DEAD_PROCESS
 #  ifndef IRIS4D
@@ -385,7 +377,7 @@
 	    wp->who_prev = wpnew;	/* linked in now */
 	}
     }
-    (void) close(utmpfd);
+    endutent();
 # if defined(UTHOST) && defined(_SEQUENT_)
     endutent();
 # endif

--- tcsh-6.13.00/sh.func.c.orig	2004-09-05 12:52:39.640514472 +0200
+++ tcsh-6.13.00/sh.func.c	2004-09-05 13:05:05.446134784 +0200
@@ -1873,6 +1873,10 @@
     { RLIMIT_SBSIZE,	"sbsize",	1,	""		},
 # endif /* RLIMIT_SBSIZE */
 
+# ifdef RLIMIT_LOCKS
+    { RLIMIT_LOCKS,	"flocks",	1,	""		},
+# endif /* RLIMIG_LOCKS */
+
     { -1, 		NULL, 		0, 	NULL		}
 };
 
@@ -2082,6 +2086,7 @@
 # endif /* BSDLIMIT */
     RLIM_TYPE limit;
     int     div = lp->limdiv;
+    int     limret;
 
     xprintf("%-13.13s", lp->limname);
 
@@ -2092,7 +2097,12 @@
 	limit -= 0x20000000;
 #  endif /* aiws */
 # else /* BSDLIMIT */
-    (void) getrlimit(lp->limconst, &rlim);
+    limret = getrlimit(lp->limconst, &rlim);
+    if ( ( limret < 0 ) && 
+	 ( errno == EINVAL ) &&
+	 ( lp->limconst == RLIMIT_LOCKS ) ) {
+	    rlim.rlim_max = rlim.rlim_cur = RLIM_INFINITY;
+    }
     limit = hard ? rlim.rlim_max : rlim.rlim_cur;
 # endif /* BSDLIMIT */
 
@@ -2191,6 +2201,11 @@
 	rlim.rlim_max = rlim.rlim_cur;
 
     if (setrlimit(lp->limconst, &rlim) < 0) {
+       if ( ( lp->limconst == RLIMIT_LOCKS ) &&
+	    ( errno == EINVAL ) ) {
+	       xprintf(CGETS(15, 5, "cannot set it on the current kernel\n"));
+	       return(0);
+       }
 # else /* BSDLIMIT */
     if (limit != RLIM_INFINITY && lp->limconst == RLIMIT_FSIZE)
 	limit /= 512;
--- tcsh-6.10.00.old/nls/C/set15	Sat Oct 19 15:52:32 1996
+++ tcsh-6.10.00/nls/C/set15	Tue Apr 17 14:42:55 2001
@@ -5,3 +5,4 @@
 2 remove
 3 set
 4 \040hard
+5 cannot set it on the current kernel\n

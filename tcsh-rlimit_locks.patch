diff -urNpa tcsh-6.20.00.orig/nls/C/set15 tcsh-6.20.00/nls/C/set15
--- tcsh-6.20.00.orig/nls/C/set15	2006-03-02 18:46:45.000000000 +0000
+++ tcsh-6.20.00/nls/C/set15	2018-01-12 17:43:52.104098035 +0000
@@ -5,3 +5,4 @@ $set 15
 2 remove
 3 set
 4 \040hard
+5 cannot set it on the current kernel\n
diff -urNpa tcsh-6.20.00.orig/sh.func.c tcsh-6.20.00/sh.func.c
--- tcsh-6.20.00.orig/sh.func.c	2016-10-18 17:26:42.000000000 +0000
+++ tcsh-6.20.00/sh.func.c	2018-01-12 17:43:52.104098035 +0000
@@ -2016,6 +2016,10 @@ struct limits limits[] =
     { RLIMIT_RTTIME,	"maxrttime",	1,	"usec"		}, 
 # endif /* RLIMIT_RTTIME */ 
 
+# ifdef RLIMIT_LOCKS
+    { RLIMIT_LOCKS,	"flocks",	1,	""		},
+# endif /* RLIMIG_LOCKS */
+
     { -1, 		NULL, 		0, 	NULL		}
 };
 
@@ -2237,6 +2241,7 @@ plim(struct limits *lp, int hard)
 # endif /* BSDLIMIT */
     RLIM_TYPE limit;
     int     xdiv = lp->limdiv;
+    int     limret;
 
     xprintf("%-13.13s", lp->limname);
 
@@ -2247,7 +2252,12 @@ plim(struct limits *lp, int hard)
 	limit -= 0x20000000;
 #  endif /* aiws */
 # else /* BSDLIMIT */
-    (void) getrlimit(lp->limconst, &rlim);
+    limret = getrlimit(lp->limconst, &rlim);
+    if ( ( limret < 0 ) && 
+	 ( errno == EINVAL ) &&
+	 ( lp->limconst == RLIMIT_LOCKS ) ) {
+	    rlim.rlim_max = rlim.rlim_cur = RLIM_INFINITY;
+    }
     limit = hard ? rlim.rlim_max : rlim.rlim_cur;
 # endif /* BSDLIMIT */
 
@@ -2347,6 +2357,11 @@ setlim(struct limits *lp, int hard, RLIM
 	rlim.rlim_max = rlim.rlim_cur;
 
     if (setrlimit(lp->limconst, &rlim) < 0) {
+       if ( ( lp->limconst == RLIMIT_LOCKS ) &&
+	    ( errno == EINVAL ) ) {
+	       xprintf(CGETS(15, 5, "cannot set it on the current kernel\n"));
+	       return(0);
+       }
 # else /* BSDLIMIT */
     if (limit != RLIM_INFINITY && lp->limconst == RLIMIT_FSIZE)
 	limit /= 512;
